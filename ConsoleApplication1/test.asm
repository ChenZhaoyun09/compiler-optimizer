		SMOVIL			16, R8
		SMOVIH 			0x00000000, R8
		SMOVIL 		 	0, R9
		SMVAGA36.M1 	R9:R8,  OR0
		SNOP			1
		VLDDW			*AR1++[OR0], VR47:VR46				; VR47,VR46,V45-input VR43,VR42,VR41-output
		VLDW			*AR1++[OR0], VR45
		VMOVIL			0xAA3B, VR8							; VR8 = l2e
		VMOVIH			0x3FB80000, VR8	
		VMOVIL			0, VR9						
		VMOVIH			0x3f800000, VR9
		SNOP			3
		
		
		VFMULS32.M1		VR47, VR8, VR47						; p = p * l2e
|		VFMULS32.M2		VR46, VR8, VR46
|		VFMULS32.M3		VR45, VR8, VR45
		VMOVIL			0x0000, VR8
		VMOVIH 			0x00000000, VR8
		SNOP 			1
		
		VMOV.M1			VR47, VR33
|		VMOV.M2			VR46, VR32
|		VMOV.M3			VR45, VR31



		VFCMPLS32.M1	VR33,VR8,VR0						; p < 0?
|		VFCMPLS32.M2	VR32,VR8,VR1
|		VFCMPLS32.M3	VR31,VR8,VR2

[VR0]	VFSUBS32.M1		VR9,VR33,VR33						; if (p < 0) then w = p - 1
[VR1]	VFSUBS32.M1		VR9,VR32,VR32
[VR2]	VFSUBS32.M1		VR9,VR31,VR31
		SNOP			2
		
		VFSTRU32.M1		VR33,VR33							; w = int(w)
|		VFSTRU32.M2		VR32,VR32
|		VFSTRU32.M3		VR31,VR31
		SNOP			2
		VFINTS32.M1		VR33,VR33
|		VFINTS32.M2		VR32,VR32
|		VFINTS32.M3		VR31,VR31
		SNOP			2
		
		VFSUBS32.M1		VR33,VR47,VR33						; z = p - w
		VFSUBS32.M1		VR32,VR46,VR32
		VFSUBS32.M1		VR31,VR45,VR31

		VMOVIL			0x82E9, VR8							; p2 = 0.241710325242730
		VMOVIH			0x3E770000, VR8							; p2 = 0.241710325242730
		VMOVIL			0x381D, VR9							; p1 = -0.307068740644571
		VMOVIH			0xBE9D0000, VR9							; p1 = -0.307068740644571
		VMOVIL			0x0001, VR10						; VR10 = 127.000007286727458
		VMOVIH			0x42FE0000, VR10						; VR10 = 127.000007286727458


		VMOV.M1			VR47, VR39
|		VMOV.M2			VR46, VR38
|		VMOV.M3			VR45, VR37
		
		
		VFMULAS32.M1	VR33,VR9,VR39,VR39					; p1 = z * -0.307068740644571 + p
|		VFMULAS32.M2	VR32,VR9,VR38,VR38
|		VFMULAS32.M3	VR31,VR9,VR37,VR37
				
		VFMULS32.M1		VR33,VR33,VR36						; z^2
|		VFMULS32.M2		VR32,VR32,VR35
|		VFMULS32.M3		VR31,VR31,VR34
		SNOP			4
		
		VFMULAS32.M1	VR36,VR8,VR39,VR39					; p2 = z^2 * 0.241710325242730 + p1
|		VFMULAS32.M2	VR35,VR8,VR38,VR38
|		VFMULAS32.M3	VR34,VR8,VR37,VR37
		
		VFMULS32.M1		VR36,VR33,VR36						; z^3
|		VFMULS32.M2		VR35,VR32,VR35
|		VFMULS32.M3		VR34,VR31,VR34
		
		VMOVIL			0x137A, VR8							; p4 = 0.013676518889531
		VMOVIH			0x3C600000, VR8							; p4 = 0.013676518889531
		VMOVIL			0xA09E, VR9							; p3 = 0.051666849136575
		VMOVIH			0x3D530000, VR9							; p3 = 0.051666849136575

		VFMULAS32.M1	VR36,VR9,VR39,VR39					; p3 = z^3 * 0.051666849136575 + p2
|		VFMULAS32.M2	VR35,VR9,VR38,VR38
|		VFMULAS32.M3	VR34,VR9,VR37,VR37

		VFMULS32.M1		VR36,VR33,VR36						; z^4
|		VFMULS32.M2		VR35,VR32,VR35
|		VFMULS32.M3		VR34,VR31,VR34
		SNOP 			4
		
		VFMULAS32.M1	VR36,VR8,VR39,VR39					; p4 = z^4 * 0.013676518889531 + p3
|		VFMULAS32.M2	VR35,VR8,VR38,VR38
|		VFMULAS32.M3	VR34,VR8,VR37,VR37
		SNOP			5
		
		VFADDS32.M1		VR39,VR10,VR39						; p4 = p4 + VR10
		VFADDS32.M1		VR38,VR10,VR38
		VFADDS32.M1		VR37,VR10,VR37
		VMOVIL			0, VR10
		VMOVIH			0x4B000000, VR10
		
		
		VFMULS32.M1		VR39, VR10, VR39					; p4 = p4 * (1<<23)
|		VFMULS32.M2		VR38, VR10, VR38
|		VFMULS32.M3		VR37, VR10, VR37
		SNOP			3
		
		
		VFSTRU32.M1		VR39,VR43
|		VFSTRU32.M2		VR38,VR42
|		VFSTRU32.M3		VR37,VR41
		SNOP			2

		SMOVIL			16, R8
		SMOVIH 			0x00000000, R8
		SMOVIL 		 	0, R9
		SMVAGA36.M1 	R9:R8,  OR0
		SNOP			1
		VSTDW			VR43:VR42, *AR2++[OR0]
		VSTW			VR41, *AR2++[OR0]
		SNOP			3

		SSUBU.M1		48, R57, R57					;
		SLT				0, R57, R1
[R1]	SBR				M7002_expsp_v2	
		SNOP			6